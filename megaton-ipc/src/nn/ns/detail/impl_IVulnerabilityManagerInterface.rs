
use megaton_hammer::kernel::{FromKObject, KObject, Session};
use megaton_hammer::error::Result;
use megaton_hammer::ipc::{Request, Response};

pub struct IVulnerabilityManagerInterface(Session);

impl IVulnerabilityManagerInterface {
	pub fn Unknown1200(&self, ) -> Result<(u8)> {
		let req = Request::new(1200)
			.args(())
			;
		let mut res : Response<u8> = self.0.send(req)?;
		Ok(*res.get_raw())
	}

}

impl FromKObject for IVulnerabilityManagerInterface {
	unsafe fn from_kobject(obj: KObject) -> IVulnerabilityManagerInterface {
		IVulnerabilityManagerInterface(Session::from_kobject(obj))
	}
}
